
hdik(8)                   BSD System Manager's Manual                  hdik(8)

NAME
     hdik -- lightweight in-kernel disk image mounting tool.

SYNOPSIS
     hdik imagefile [options]

DESCRIPTION
     hdik is a lightweight tool that can be used to attach disk images in-ker-
     nel (i.e. not using a user-land process to providing the backing store).
     Only a subset of disk images can be mounted in this manner including
     read/write disk images, UDIF disk images that use zlib compression, shad-
     owed disk images, and sparse disk images.

     hdik is intended for use in situations where linking against the DiskIm-
     ages framework is problematic or an extremely lightweight mechanism for
     attaching a disk image is needed.

     You can specify that the image should not be processed by disk arbitra-
     tion by specifying the -nomount option.  You can also specify that the
     image be mounted with a shadow file by using the -shadow option.

     The following argument must be specified:

     imagefile   the disk image to be mounted.

OPTIONS
     -shadow [shadowfile]
                 Use a shadow file in conjunction with the data in the image.
                 This option prevents modification of the original image and
                 allows read-only images to be used as read/write images.
                 When blocks are being read from the image, blocks present in
                 the shadow file override blocks in the base image.  When
                 blocks are being written, the writes will be redirected to
                 the shadow file.  If not specified, -shadow defaults to <ima-
                 gename>.shadow.  If the shadow file does not exist, it is
                 created.
     -nomount    Suppress automatic mounting of the image or partitions on it.
                 This will result in /dev entries being created, but will not
                 mount any volumes.
     -drivekey keyname=value
                 Specify a key/value pair for the IOHDIXHDDrive object created
                 (shows up in the IOKit registry of devices which is viewable
                 with ioreg(8)).

SEE ALSO
     hdid(8), hdiutil(1), diskarbitrationd(8)

