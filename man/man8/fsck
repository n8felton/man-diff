FSCK(8)                   BSD System Manager's Manual                  FSCK(8)

NAME
     fsck -- filesystem consistency check and interactive repair

SYNOPSIS
     fsck -p [-f] [-m mode]
     fsck [-b block#] [-l maxparallel] [-q] [-y] [-n] [-m mode] [filesystem]
          ...

DESCRIPTION
     The first form of fsck preens a standard set of filesystems or the speci-
     fied filesystems.  It is normally used in the script /etc/rc during auto-
     matic reboot.  Here fsck reads the table /etc/fstab to determine which
     filesystems to check.  Only partitions in fstab that are mounted ``rw,''
     ``rq'' or ``ro'' and that have non-zero pass number are checked.
     Filesystems with pass number 1 (normally just the root filesystem) are
     checked one at a time.  When pass 1 completes, all remaining filesystems
     are checked, running one process per disk drive.  The disk drive contain-
     ing each filesystem is inferred from the shortest prefix of the device
     name that ends in one or more digits; the remaining characters are
     assumed to be the partition designator.  In preening mode, filesystems
     that are marked clean are skipped.  Filesystems are marked clean when
     they are unmounted, when they have been mounted read-only, or when fsck
     runs on them successfully.

     The kernel takes care that only a restricted class of innocuous filesys-
     tem inconsistencies can happen unless hardware or software failures
     intervene.  These are limited to the following:
           Unreferenced inodes
           Link counts in inodes too large
           Missing blocks in the free map
           Blocks in the free map also in files
           Counts in the super-block wrong

     These are the only inconsistencies that fsck with the -p option will cor-
     rect; if it encounters other inconsistencies, it exits with an abnormal
     return status and an automatic reboot will then fail.  For each corrected
     inconsistency one or more lines will be printed identifying the filesys-
     tem on which the correction will take place, and the nature of the cor-
     rection.  After successfully correcting a filesystem, fsck will print the
     number of files on that filesystem, the number of used and free blocks,
     and the percentage of fragmentation.

     If sent a QUIT signal, fsck will finish the filesystem checks, then exit
     with an abnormal return status that causes an automatic reboot to fail.
     This is useful when you want to finish the filesystem checks during an
     automatic reboot, but do not want the machine to come up multiuser after
     the checks complete.

     Without the -p option, fsck audits and interactively repairs inconsistent
     conditions for filesystems.  If the filesystem is inconsistent the opera-
     tor is prompted for concurrence before each correction is attempted.  It
     should be noted that some of the corrective actions which are not cor-
     rectable under the -p option will result in some loss of data.  The
     amount and severity of data lost may be determined from the diagnostic
     output.  The default action for each consistency correction is to wait
     for the operator to respond yes or no.  If the operator does not have
     write permission on the filesystem fsck will default to a -n action.

     Fsck has more consistency checks than its predecessors check, dcheck,
     fcheck, and icheck combined.

     The following flags are interpreted by fsck.

     -b          Use the block specified immediately after the flag as the
                 super block for the filesystem.  Block 32 is usually an
                 alternate super block.

     -f          Force fsck to check `clean' filesystems when preening.

     -l          Limit the number of parallel checks to the number specified
                 in the following argument.  By default, the limit is the num-
                 ber of disks, running one process per disk.  If a smaller
                 limit is given, the disks are checked round-robin, one
                 filesystem at a time.

     -m          Use the mode specified in octal immediately after the flag as
                 the permission bits to use when creating the lost+found
                 directory rather than the default 1777.  In particular, sys-
                 tems that do not wish to have lost files accessible by all
                 users on the system should use a more restrictive set of per-
                 missions such as 700.

     -q          Do a quick check to determine if the filesystem was unmounted
                 cleanly.

     -y          Assume a yes response to all questions asked by fsck; this
                 should be used with great caution as this is a free license
                 to continue after essentially unlimited trouble has been
                 encountered.

     -n          Assume a no response to all questions asked by fsck except
                 for `CONTINUE?', which is assumed to be affirmative; do not
                 open the filesystem for writing.

     If no filesystems are given to fsck then a default list of filesystems is
     read from the file /etc/fstab.

           Inconsistencies checked are as follows:
           1.   Blocks claimed by more than one inode or the free map.
           2.   Blocks claimed by an inode outside the range of the filesys-
                tem.
           3.   Incorrect link counts.
           4.   Size checks:
                      Directory size not a multiple of DIRBLKSIZ.
                      Partially truncated file.
           5.   Bad inode format.
           6.   Blocks not accounted for anywhere.
           7.   Directory checks:
                      File pointing to unallocated inode.
                      Inode number out of range.
                      Dot or dot-dot not the first two entries of a directory
                      or having the wrong inode number.
           8.   Super Block checks:
                      More blocks for inodes than there are in the filesystem.
                      Bad free block map format.
                      Total free block and/or free inode count incorrect.

     Orphaned files and directories (allocated but unreferenced) are, with the
     operator's concurrence, reconnected by placing them in the lost+found
     directory.  The name assigned is the inode number.  If the lost+found
     directory does not exist, it is created.  If there is insufficient space
     its size is increased.

     Because of inconsistencies between the block device and the buffer cache,
     the raw device should always be used.

FILES
     /etc/fstab  contains default list of filesystems to check.

DIAGNOSTICS
     The diagnostics produced by fsck are fully enumerated and explained in
     Appendix A of Fsck - The UNIX File System Check Program.

SEE ALSO
     fs(5), fstab(5), newfs(8), reboot(8)

