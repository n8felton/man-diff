ibtool(1)                                                            ibtool(1)



NAME
       ibtool - verifies, updates, and prints Interface Builder documents.


SYNOPSIS
       ibtool document

DESCRIPTION
       ibtool  verifies,  updates,  and  prints  the  contents of an Interface
       Builder document, generating its output in standard plist format.   The
       tool  follows  a "read", "modify", "write", "print" order of operations
       that is represented by the order of the options below.


OPTIONS
   Specifying input:
       --bundle bundlePath
              Load the bundle located at bundlePath.

       --plugin pluginPath
              Load the plug-in located at pluginPath.

       --plugin-dir pluginPath
              Load all valid plug-ins found in the first level of  pluginPath.



   Localization:
       --previous-file previousFile
              Specifies  the  Interface  Builder  document  from  the previous
              developement iteration for the purpose of incremental  localiza-
              tions.

       --incremental-file incrementalFile
              Specifies  the  Interface  Builder  document  from which to take
              prior   localizations    during    incremental    localizations.
              incrementalFile will often be the translated version of the doc-
              ument specified with --previous-file.

       --localize-incremental
              Consolidate the structural and localization changes between  the
              input  document, the document specified by previousFile, and the
              document specified by  incrementalFile,  writing  the  resulting
              document to the path specified by --write.  When specifying this
              option, one MUST provide a --previous-file and an --incremental-
              file.



   Importing:
       --import plist
              Apply  the  property  values specified in plist to the object in
              the Interface Builder document  with  the  matching  object  ID.
              plist should be a plist in the format produced by --export, only
              with the dictionary containing  the  key  com.apple.ibtool.docu-
              ment.export  removed from surrounding the object IDs.  Note that
              setting a property in this manner may not  actually  modify  the
              value  of the property, or conversely may alter additional prop-
              erties.  Often, the input to this option is a  modified  version
              of the output from --export. Combine this option with --write in
              order to produce an Interface Builder document with the modified
              property values.

       --strings-file stringsFile
              Specifies the strings file, in the format generated by generate-
              stringsfile, from which to take string localizations.



   Refactoring:
       --convert old-new
              Rename the class named 'old' to 'new'. If  'old'  ends  with  an
              '*',  then  rename  all  classes beginning with 'old' to instead
              begin with 'new'. This Updates all outlet  types,  class  names,
              custom classes, as well as actual instances.

       --upgrade
              Upgrade the input Interface Builder document to the latest docu-
              ment type.  If the output path is not specified by --write,  the
              upgraded document will be written to the input path.



   Compiling:
       --compile path
              Compile the input file and write it to the specified path.



   Specifying output:
       --write path
              Write  the resulting Interface Builder document to the specified
              path.



   Exporting:
       --export plist
              For each object in the Interface Builder  document,  export  the
              union of the properties specified in plist for each class listed
              in plist of which the object is either a member, or a member  of
              a  descending class.  plist should be a plist composed of a dic-
              tionary with class names for keys, and arrays  of  property  key
              paths  for  values.  The output is a plist composed of a dictio-
              nary under the key com.apple.ibtool.document.export, where  each
              key  is an object ID, and each value is a dictionary of property
              key paths to their corresponding value.  If a key in the  second
              level  dictionary  begins with a '.', it isn't a key path.  Cur-
              rently, the only special key is ".nilKeypaths", which identifies
              an array of key paths whose value was nil.



   Printing File Contents:
       --generate-stringsfile stringsfile
              Extract  the  localizable  strings  from  the  Interface Builder
              document into stringsfile in the format expected  by  --strings-
              file.

       --warnings
              Include  document  warning  messages  in  ibtool's plist output.
              Warnings       will       appear       under       the       key
              com.apple.ibtool.document.warnings,  with  messages listed under
              the subkey message and warning types under the subkey type.

       --errors
              Include  document  error  messages  in  ibtool's  plist  output.
              Errors        will        appear       under       the       key
              com.apple.ibtool.document.errors, with messages listed under the
              subkey message and error types under the subkey type.

       --notices
              Include  document  notice  messages  in  ibtool's  plist output.
              Notices       will       appear       under       the        key
              com.apple.ibtool.document.notices,  with  messages  listed under
              the subkey message and error types under the subkey type.

       --localizable-strings
              Include the document's non-empty localizable strings in ibtool's
              plist  output.   The localizable strings are output as a dictio-
              nary  under   the   key   com.apple.ibtool.document.localizable-
              strings,  where  the  keys  are  the object ids for objects with
              localizable strings, and the values are dictionaries of property
              names  and  their associated localizable strings.  Empty strings
              are ignored.

       --localizable-geometry
              Include the document's localizable geometry  in  ibtool's  plist
              output.   The  localizable  geometry  is  output as a dictionary
              under  the  key  com.apple.ibtool.document.localizable-geometry,
              where  the  keys are the object ids for objects with localizable
              geometry, and the values are dictionaries of property names  and
              a plist representation of that geometry.

       --localizable-other
              Include   the  document's  localizable  attributes,  other  than
              strings  and  geometry,  in  ibtool's   plist   output.    These
              attributes   are   output   as   a   dictionary  under  the  key
              com.apple.ibtool.document.localizable-other, where the keys  are
              the  object ids for objects with the localizable attributes, and
              the values are dictionaries of localizable  property  names  and
              their associated values.

       --localizable-all
              Include  all  the  document's localizable attributes in ibtool's
              plist output.  The localizable attributes are output as  a  dic-
              tionary under the key com.apple.ibtool.document.localizable-all,
              where the keys are the objects ids of the objects with  localiz-
              able  properties, and the values are the union of the properties
              returned by --localizable-strings,  --localizable-geometry,  and
              --localizable-other.

       --objects
              Include  the  document's  objects in ibtool's plist output.  The
              objects   are   output   as   a   dictionary   under   the   key
              com.apple.ibtool.document.objects, where the keys are the object
              ids, and the values are the associated object's properties.

       --hierarchy
              Include the document's hierarchy in ibtool's plist output.   The
              hierarchy  is output as a nested array of dictionaries under the
              key   com.apple.ibtool.document.hierarchy   with   the   subkeys
              objectID, label, name, children, and customClass.

       --connections
              Include  the  document's  connections  in ibtool's plist output.
              The connections  are  output  as  a  dictionary  under  the  key
              com.apple.ibtool.document.connections,  where  the  keys are the
              object ids, and the values are dictionaries including  the  sub-
              keys  type,  label, source-id, source-label, destination-id, and
              destination-label.

       --classes
              Include the document's classes in ibtool's  plist  output.   The
              classes   are   output   as   a   dictionary   under   the   key
              com.apple.ibtool.document.classes, where the keys are the  class
              names,  and  the  values  are dictionaries including the subkeys
              actions, outlets, superclass, and class.

       --version-history
              Print the version of IB/System Version used when this  Interface
              Builder  document  was last saved.  The version history informa-
              tion is output under the key  com.apple.ibtool.document.version-
              history with the subkey interface-builder-version.

       --all  Include  all the information listed above in ibtool's plist out-
              put.



   Version Information:
       --version
              Print the version of ibtool.  The version information is  output
              under  the key com.apple.ibtool.version with the subkeys bundle-
              version and short-bundle-version.


EXAMPLES
       ibtool --generate-stringsfile file.strings file.nib
              ibtool will output a strings file containing all  of  file.nib's
              localizable strings.

       ibtool  --previous-file  orig.nib --incremental-file trans.nib --local-
       ize-incremental --write newTrans.nib mod.nib
              ibtool  will  leverage  orig.nib  against changes in mod.nib and
              localizations from trans.nib, and write the new translated  nib.

       ibtool --previous-file orig.nib --incremental-file trans.nib --strings-
       file str.strings --localize-incremental mod.nib --write newTrans.nib
              ibtool  will execute in the same manner as above, but will apply
              the strings from str.strings before writing the document.

       ibtool --warnings --errors --notices file.nib > alerts.plist
              alerts.plist will contain all warning, error,  and  notice  mes-
              sages from file.nib.

       ibtool --plugin path/to/some.plugin --localizable-geometry file.nib
              ibtool  will load some.plugin and output a plist of all localiz-
              able geometry in file.nib.

       ibtool --convert oldName-newName file.nib
              ibtool will change all classes with the exact name "oldName"  to
              be named "newName" instead.

       ibtool --convert Old'*'-New file
              ibtool  will change all classes with names beginning with "Old",
              such as "OldName", "OldClassName", and  "OldClass",  to  instead
              begin with "New".  For example, the previously mentioned classes
              would be changed to "NewName", "NewClassName",  and  "NewClass",
              respectively.


SEE ALSO
       nibtool(1)



