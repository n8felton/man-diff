MYSQLIMPORT(1)               MySQL Database System              MYSQLIMPORT(1)



NAME
       mysqlimport - a data import program

SYNOPSIS
       mysqlimport [options] db_name textfile1 ...

DESCRIPTION
       The mysqlimport client provides a command-line interface to the LOAD
       DATA INFILE SQL statement. Most options to mysqlimport correspond
       directly to clauses of LOAD DATA INFILE syntax. See Section 2.5, "LOAD
       DATA INFILE Syntax".

       Invoke mysqlimport like this:

          shell> mysqlimport [options] db_name textfile1 [textfile2 ...]

       For each text file named on the command line, mysqlimport strips any
       extension from the filename and uses the result to determine the name
       of the table into which to import the file's contents. For example,
       files named patient.txt, patient.text, and patient all would be
       imported into a table named patient.

       mysqlimport supports the following options:

       o  --help, -?

          Display a help message and exit.

       o  --character-sets-dir=path

          The directory where character sets are installed. See Section 2,
          "The Character Set Used for Data and Sorting".

       o  --columns=column_list, -c column_list

          This option takes a comma-separated list of column names as its
          value. The order of the column names indicates how to match data
          file columns with table columns.

       o  --compress, -C

          Compress all information sent between the client and the server if
          both support compression.

       o  --debug[=debug_options], -# [debug_options]

          Write a debugging log. The debug_options string often is
          'd:t:o,file_name'.

       o  --default-character-set=charset_name

          Use charset_name as the default character set. See Section 2, "The
          Character Set Used for Data and Sorting".

       o  --delete, -D

          Empty the table before importing the text file.

       o  --fields-terminated-by=..., --fields-enclosed-by=...,
          --fields-optionally-enclosed-by=..., --fields-escaped-by=...

          These options have the same meaning as the corresponding clauses for
          LOAD DATA INFILE. See Section 2.5, "LOAD DATA INFILE Syntax".

       o  --force, -f

          Ignore errors. For example, if a table for a text file does not
          exist, continue processing any remaining files. Without --force,
          mysqlimport exits if a table does not exist.

       o  --host=host_name, -h host_name

          Import data to the MySQL server on the given host. The default host
          is localhost.

       o  --ignore, -i

          See the description for the --replace option.

       o  --ignore-lines=N

          Ignore the first N lines of the data file.

       o  --lines-terminated-by=...

          This option has the same meaning as the corresponding clause for
          LOAD DATA INFILE. For example, to import Windows files that have
          lines terminated with carriage return/linefeed pairs, use
          --lines-terminated-by="\r\n". (You might have to double the
          backslashes, depending on the escaping conventions of your command
          interpreter.) See Section 2.5, "LOAD DATA INFILE Syntax".

       o  --local, -L

          Read input files locally from the client host.

       o  --lock-tables, -l

          Lock all tables for writing before processing any text files. This
          ensures that all tables are synchronized on the server.

       o  --low-priority

          Use LOW_PRIORITY when loading the table. This affects only storage
          engines that use only table-level locking (MyISAM, MEMORY, MERGE).

       o  --password[=password], -p[password]

          The password to use when connecting to the server. If you use the
          short option form (-p), you cannot have a space between the option
          and the password. If you omit the password value following the
          --password or -p option on the command line, you are prompted for
          one.

          Specifying a password on the command line should be considered
          insecure. See Section 5.6, "Keeping Your Password Secure".

       o  --pipe, -W

          On Windows, connect to the server via a named pipe. This option
          applies only for connections to a local server, and only if the
          server supports named-pipe connections.

       o  --port=port_num, -P port_num

          The TCP/IP port number to use for the connection.

       o  --protocol={TCP|SOCKET|PIPE|MEMORY}

          The connection protocol to use for connecting to the server. It is
          useful when the other connection parameters normally would cause a
          protocol to be used other than the one you want. For details on the
          allowable values, see Section 2.2, "Connecting to the MySQL Server".

       o  --replace, -r

          The --replace and --ignore options control handling of input rows
          that duplicate existing rows on unique key values. If you specify
          --replace, new rows replace existing rows that have the same unique
          key value. If you specify --ignore, input rows that duplicate an
          existing row on a unique key value are skipped. If you do not
          specify either option, an error occurs when a duplicate key value is
          found, and the rest of the text file is ignored.

       o  --silent, -s

          Silent mode. Produce output only when errors occur.

       o  --socket=path, -S path

          For connections to localhost, the Unix socket file to use, or, on
          Windows, the name of the named pipe to use.

       o  --ssl*

          Options that begin with --ssl specify whether to connect to the
          server via SSL and indicate where to find SSL keys and certificates.
          See Section 5.7.3, "SSL Command Options".

       o  --user=user_name, -u user_name

          The MySQL username to use when connecting to the server.

       o  --verbose, -v

          Verbose mode. Print more information about what the program does.

       o  --version, -V

          Display version information and exit.


       Here is a sample session that demonstrates use of mysqlimport:

          shell> mysql -e 'CREATE TABLE imptest(id INT, n VARCHAR(30))' test
          shell> ed
          a
          100     Max Sydow
          101     Count Dracula
          w imptest.txt
          32
          q
          shell> od -c imptest.txt
          0000000   1   0   0  \t   M   a   x       S   y   d   o   w  \n   1   0
          0000020   1  \t   C   o   u   n   t       D   r   a   c   u   l   a  \n
          0000040
          shell> mysqlimport --local test imptest.txt
          test.imptest: Records: 2  Deleted: 0  Skipped: 0  Warnings: 0
          shell> mysql -e 'SELECT * FROM imptest' test
          +------+---------------+
          | id   | n             |
          +------+---------------+
          |  100 | Max Sydow     |
          |  101 | Count Dracula |
          +------+---------------+

COPYRIGHT
       Copyright 2007-2008 MySQL AB

       This documentation is free software; you can redistribute it and/or
       modify it under the terms of the GNU General Public License as
       published by the Free Software Foundation; version 2 of the License.

       This documentation is distributed in the hope that it will be useful,
       but WITHOUT ANY WARRANTY; without even the implied warranty of
       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
       General Public License for more details.

       You should have received a copy of the GNU General Public License along
       with the program; if not, write to the Free Software Foundation, Inc.,
       51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA or see
       http://www.gnu.org/licenses/.

SEE ALSO
       For more information, please refer to the MySQL Reference Manual, which
       may already be installed locally and which is also available online at
       http://dev.mysql.com/doc/.

AUTHOR
       MySQL AB (http://www.mysql.com/).



