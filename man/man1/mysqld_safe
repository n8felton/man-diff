MYSQLD_SAFE(1)               MySQL Database System              MYSQLD_SAFE(1)



NAME
       mysqld_safe - MySQL server startup script
       safe_mysqld - MySQL server startup script

SYNOPSIS
       mysqld_safe options

DESCRIPTION
       mysqld_safe is the recommended way to start a mysqld server on Unix and
       NetWare.  mysqld_safe adds some safety features such as restarting the
       server when an error occurs and logging runtime information to an error
       log file. NetWare-specific behaviors are listed later in this section.

           Note
           To preserve backward compatibility with older versions of MySQL,
           MySQL binary distributions still include safe_mysqld as a symbolic
           link to mysqld_safe. However, you should not rely on this because
           it is removed as of MySQL 5.1.

       By default, mysqld_safe before MySQL 5.0.27 tries to start an
       executable named mysqld-max if it exists, and mysqld otherwise. Be
       aware of the implications of this behavior:

       o   On Linux, the MySQL-Max RPM relies on this mysqld_safe behavior.
           The RPM installs an executable named mysqld-max, which causes
           mysqld_safe to automatically use that executable rather than mysqld
           from that point on.

       o   If you install a MySQL-Max distribution that includes a server
           named mysqld-max, and then upgrade later to a non-Max version of
           MySQL, mysqld_safe will still attempt to run the old mysqld-max
           server. If you perform such an upgrade, you should manually remove
           the old mysqld-max server to ensure that mysqld_safe runs the new
           mysqld server.

       To override the default behavior and specify explicitly the name of the
       server you want to run, specify a --mysqld or --mysqld-version option
       to mysqld_safe. You can also use --ledir to indicate the directory
       where mysqld_safe should look for the server.

       Many of the options to mysqld_safe are the same as the options to
       mysqld. See Section 5.1.2, "Server Command Options".

       Options unknown to mysqld_safe are passed to mysqld if they are
       specified on the command line, but ignored if they are specified in the
       [mysqld_safe] group of an option file. See Section 4.2.3.3, "Using
       Option Files".

       mysqld_safe reads all options from the [mysqld], [server], and
       [mysqld_safe] sections in option files. For example, if you specify a
       [mysqld] section like this, mysqld_safe will find and use the
       --log-error option:

           [mysqld]
           log-error=error.log

       For backward compatibility, mysqld_safe also reads [safe_mysqld]
       sections, although you should rename such sections to [mysqld_safe] in
       MySQL 5.0 installations.

       mysqld_safe supports the following options. It also reads option files
       and supports the options for processing them described at
       Section 4.2.3.3.1, "Command-Line Options that Affect Option-File
       Handling".

       o   --help

           Display a help message and exit. (Added in MySQL 5.0.3)

       o   --autoclose

           (NetWare only) On NetWare, mysqld_safe provides a screen presence.
           When you unload (shut down) the mysqld_safe NLM, the screen does
           not by default go away. Instead, it prompts for user input:

               *<NLM has terminated; Press any key to close the screen>*

           If you want NetWare to close the screen automatically instead, use
           the --autoclose option to mysqld_safe.

       o   --basedir=path

           The path to the MySQL installation directory.

       o   --core-file-size=size

           The size of the core file that mysqld should be able to create. The
           option value is passed to ulimit -c.

       o   --datadir=path

           The path to the data directory.

       o   --defaults-extra-file=path

           The name of an option file to be read in addition to the usual
           option files. This must be the first option on the command line if
           it is used. As of MySQL 5.0.6, if the file does not exist or is
           otherwise inaccessible, the server will exit with an error.

       o   --defaults-file=file_name

           The name of an option file to be read instead of the usual option
           files. This must be the first option on the command line if it is
           used.

       o   --ledir=path

           If mysqld_safe cannot find the server, use this option to indicate
           the path name to the directory where the server is located.

       o   --log-error=file_name

           Write the error log to the given file. See Section 5.2.1, "The
           Error Log".

       o   --mysqld=prog_name

           The name of the server program (in the ledir directory) that you
           want to start. This option is needed if you use the MySQL binary
           distribution but have the data directory outside of the binary
           distribution. If mysqld_safe cannot find the server, use the
           --ledir option to indicate the path name to the directory where the
           server is located.

       o   --mysqld-version=suffix

           This option is similar to the --mysqld option, but you specify only
           the suffix for the server program name. The basename is assumed to
           be mysqld. For example, if you use --mysqld-version=debug,
           mysqld_safe starts the mysqld-debug program in the ledir directory.
           If the argument to --mysqld-version is empty, mysqld_safe uses
           mysqld in the ledir directory.

       o   --nice=priority

           Use the nice program to set the server's scheduling priority to the
           given value.

       o   --no-defaults

           Do not read any option files. This must be the first option on the
           command line if it is used.

       o   --open-files-limit=count

           The number of files that mysqld should be able to open. The option
           value is passed to ulimit -n. Note that you need to start
           mysqld_safe as root for this to work properly!

       o   --pid-file=file_name

           The path name of the process ID file.

       o   --port=port_num

           The port number that the server should use when listening for
           TCP/IP connections. The port number must be 1024 or higher unless
           the server is started by the root system user.

       o   --skip-kill-mysqld

           Do not try to kill stray mysqld processes at startup. This option
           works only on Linux.

       o   --socket=path

           The Unix socket file that the server should use when listening for
           local connections.

       o   --timezone=timezone

           Set the TZ time zone environment variable to the given option
           value. Consult your operating system documentation for legal time
           zone specification formats.

       o   --user={user_name|user_id}

           Run the mysqld server as the user having the name user_name or the
           numeric user ID user_id. ("User" in this context refers to a system
           login account, not a MySQL user listed in the grant tables.)

       If you execute mysqld_safe with the --defaults-file or
       --defaults-extra-file option to name an option file, the option must be
       the first one given on the command line or the option file will not be
       used. For example, this command will not use the named option file:

           mysql> mysqld_safe --port=port_num --defaults-file=file_name

       Instead, use the following command:

           mysql> mysqld_safe --defaults-file=file_name --port=port_num

       The mysqld_safe script is written so that it normally can start a
       server that was installed from either a source or a binary distribution
       of MySQL, even though these types of distributions typically install
       the server in slightly different locations. (See Section 2.7,
       "Installation Layouts".)  mysqld_safe expects one of the following
       conditions to be true:

       o   The server and databases can be found relative to the working
           directory (the directory from which mysqld_safe is invoked). For
           binary distributions, mysqld_safe looks under its working directory
           for bin and data directories. For source distributions, it looks
           for libexec and var directories. This condition should be met if
           you execute mysqld_safe from your MySQL installation directory (for
           example, /usr/local/mysql for a binary distribution).

       o   If the server and databases cannot be found relative to the working
           directory, mysqld_safe attempts to locate them by absolute path
           names. Typical locations are /usr/local/libexec and /usr/local/var.
           The actual locations are determined from the values configured into
           the distribution at the time it was built. They should be correct
           if MySQL is installed in the location specified at configuration
           time.

       Because mysqld_safe tries to find the server and databases relative to
       its own working directory, you can install a binary distribution of
       MySQL anywhere, as long as you run mysqld_safe from the MySQL
       installation directory:

           shell> cd mysql_installation_directory
           shell> bin/mysqld_safe &

       If mysqld_safe fails, even when invoked from the MySQL installation
       directory, you can specify the --ledir and --datadir options to
       indicate the directories in which the server and databases are located
       on your system.

       Normally, you should not edit the mysqld_safe script. Instead,
       configure mysqld_safe by using command-line options or options in the
       [mysqld_safe] section of a my.cnf option file. In rare cases, it might
       be necessary to edit mysqld_safe to get it to start the server
       properly. However, if you do this, your modified version of mysqld_safe
       might be overwritten if you upgrade MySQL in the future, so you should
       make a copy of your edited version that you can reinstall.

       On NetWare, mysqld_safe is a NetWare Loadable Module (NLM) that is
       ported from the original Unix shell script. It starts the server as
       follows:

        1. Runs a number of system and option checks.

        2. Runs a check on MyISAM tables.

        3. Provides a screen presence for the MySQL server.

        4. Starts mysqld, monitors it, and restarts it if it terminates in
           error.

        5. Sends error messages from mysqld to the host_name.err file in the
           data directory.

        6. Sends mysqld_safe screen output to the host_name.safe file in the
           data directory.

COPYRIGHT
       Copyright (C) 1997, 2011, Oracle and/or its affiliates. All rights
       reserved.

       This documentation is free software; you can redistribute it and/or
       modify it only under the terms of the GNU General Public License as
       published by the Free Software Foundation; version 2 of the License.

       This documentation is distributed in the hope that it will be useful,
       but WITHOUT ANY WARRANTY; without even the implied warranty of
       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
       General Public License for more details.

       You should have received a copy of the GNU General Public License along
       with the program; if not, write to the Free Software Foundation, Inc.,
       51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA or see
       http://www.gnu.org/licenses/.


SEE ALSO
       For more information, please refer to the MySQL Reference Manual, which
       may already be installed locally and which is also available online at
       http://dev.mysql.com/doc/.

AUTHOR
       Oracle Corporation (http://dev.mysql.com/).



